/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Counter, CounterInterface } from "../Counter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    name: "CountedTo",
    type: "event",
  },
  {
    inputs: [],
    name: "countDown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "countUp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b5061020b806100246000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630bd8599e146100465780635fcbd5b614610064578063a87d942c1461006c575b600080fd5b61004e610074565b60405161005b9190610187565b60405180910390f35b61004e6100f7565b61004e61012c565b60008060005460016100869190610190565b905060005481116100b25760405162461bcd60e51b81526004016100a99061015d565b60405180910390fd5b60008190556040517fa501f5a8ef1a812bff54fb3642cfaec066c351af1716c48a7bdd05e0bb631e67906100e7908390610187565b60405180910390a1505060005490565b600080600160005461010991906101a8565b905060005481106100b25760405162461bcd60e51b81526004016100a990610132565b60005490565b60208082526011908201527055696e7432353620756e646572666c6f7760781b604082015260600190565b60208082526010908201526f55696e74323536206f766572666c6f7760801b604082015260600190565b90815260200190565b600082198211156101a3576101a36101bf565b500190565b6000828210156101ba576101ba6101bf565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212209ab67fa3f2618eb2019eff9a093afc99bf2ea369f081a4de8ff6058d7117f44464736f6c63430008000033";

export class Counter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Counter> {
    return super.deploy(overrides || {}) as Promise<Counter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Counter {
    return super.attach(address) as Counter;
  }
  connect(signer: Signer): Counter__factory {
    return super.connect(signer) as Counter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new utils.Interface(_abi) as CounterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Counter {
    return new Contract(address, _abi, signerOrProvider) as Counter;
  }
}
