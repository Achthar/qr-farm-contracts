/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MasterChefV2, MasterChefV2Interface } from "../MasterChefV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract QuantToken",
        name: "_egg",
        type: "address",
      },
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eggPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "SetDevAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "SetFeeAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "goosePerBlock",
        type: "uint256",
      },
    ],
    name: "UpdateEmissionRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IBEP20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_depositFeeBP",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
    ],
    name: "dev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "devaddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "egg",
    outputs: [
      {
        internalType: "contract QuantToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eggPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingEgg",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBEP20",
        name: "",
        type: "address",
      },
    ],
    name: "poolExistence",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IBEP20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accEggPerShare",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "depositFeeBP",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_depositFeeBP",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeAddress",
        type: "address",
      },
    ],
    name: "setFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eggPerBlock",
        type: "uint256",
      },
    ],
    name: "updateEmissionRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006008553480156200001657600080fd5b5060405162001e2a38038062001e2a8339810160408190526200003991620000f2565b6200004d620000476200009e565b620000a2565b60018055600280546001600160a01b03199081166001600160a01b0397881617909155600380548216958716959095179094556005805490941692909416919091179091556004556009556200016f565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600080600060a086880312156200010a578081fd5b8551620001178162000156565b60208701519095506200012a8162000156565b60408701519094506200013d8162000156565b6060870151608090970151959894975095949392505050565b6001600160a01b03811681146200016c57600080fd5b50565b611cab806200017f6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80638aa28550116100de578063c06abfc711610097578063d963842211610071578063d96384221461030d578063e2bbb15814610320578063f2fde38b14610333578063f456426f146103465761018e565b8063c06abfc7146102dd578063cbd258b5146102e5578063d49e77cd146103055761018e565b80638aa285501461027e5780638d88a90e146102865780638da5cb5b146102995780638dbb1e3a146102a157806393f1a40b146102b4578063a1a4d4a4146102d55761018e565b806348cd4cb11161014b578063630b5ba111610125578063630b5ba114610248578063715018a61461025057806384e82a33146102585780638705fcd41461026b5761018e565b806348cd4cb11461021a57806351eb05a6146102225780635312ea8e146102355761018e565b8063081e3eda146101935780630ba84cd2146101b15780631526fe27146101c657806317caf6f1146101ea57806341275358146101f2578063441a3e7014610207575b600080fd5b61019b610359565b6040516101a89190611b70565b60405180910390f35b6101c46101bf3660046116a2565b61035f565b005b6101d96101d43660046116a2565b6103f1565b6040516101a8959493929190611816565b61019b610440565b6101fa610446565b6040516101a891906117ba565b6101c4610215366004611751565b610455565b61019b6105d2565b6101c46102303660046116a2565b6105d8565b6101c46102433660046116a2565b610816565b6101c4610900565b6101c461092b565b6101c4610266366004611701565b610976565b6101c461027936600461166a565b610b95565b61019b610c0b565b6101c461029436600461166a565b610c10565b6101fa610c86565b61019b6102af366004611751565b610c95565b6102c76102c23660046116d2565b610cad565b6040516101a8929190611b79565b61019b610cd1565b6101fa610cd7565b6102f86102f336600461166a565b610ce6565b6040516101a8919061180b565b6101fa610cfb565b6101c461031b366004611772565b610d0a565b6101c461032e366004611751565b610e5e565b6101c461034136600461166a565b61100c565b61019b6103543660046116d2565b61107a565b60065490565b6103676111f8565b6001600160a01b0316610378610c86565b6001600160a01b0316146103a75760405162461bcd60e51b815260040161039e90611a33565b60405180910390fd5b6103af610900565b600481905560405133907fe2492e003bbe8afa53088b406f0c1cb5d9e280370fc72a74cf116ffd343c4053906103e6908490611b70565b60405180910390a250565b6006818154811061040157600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0390931694509092909161ffff1685565b60085481565b6005546001600160a01b031681565b600260015414156104785760405162461bcd60e51b815260040161039e90611b39565b60026001819055506000600683815481106104a357634e487b7160e01b600052603260045260246000fd5b6000918252602080832086845260078252604080852033865290925292208054600590920290920192508311156104ec5760405162461bcd60e51b815260040161039e90611a9f565b6104f5846105d8565b600061052f826001015461052964e8d4a51000610523876003015487600001546111fc90919063ffffffff16565b90611208565b90611214565b90508015610541576105413382611220565b831561056b5781546105539085611214565b8255825461056b906001600160a01b031633866113e2565b600383015482546105869164e8d4a5100091610523916111fc565b6001830155604051859033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906105bf908890611b70565b60405180910390a3505060018055505050565b60095481565b6000600682815481106105fb57634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020190508060020154431161061c5750610813565b80546040516370a0823160e01b81526000916001600160a01b0316906370a082319061064c9030906004016117ba565b60206040518083038186803b15801561066457600080fd5b505afa158015610678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069c91906116ba565b90508015806106ad57506001820154155b156106bf575043600290910155610813565b60006106cf836002015443610c95565b905060006106fc60085461052386600101546106f6600454876111fc90919063ffffffff16565b906111fc565b6002546003549192506001600160a01b03908116916340c10f19911661072384600a611208565b6040518363ffffffff1660e01b81526004016107409291906117f2565b600060405180830381600087803b15801561075a57600080fd5b505af115801561076e573d6000803e3d6000fd5b50506002546040516340c10f1960e01b81526001600160a01b0390911692506340c10f1991506107a490309085906004016117f2565b600060405180830381600087803b1580156107be57600080fd5b505af11580156107d2573d6000803e3d6000fd5b505050506108006107f58461052364e8d4a51000856111fc90919063ffffffff16565b60038601549061143d565b6003850155505043600290920191909155505b50565b600260015414156108395760405162461bcd60e51b815260040161039e90611b39565b600260018190555060006006828154811061086457634e487b7160e01b600052603260045260246000fd5b6000918252602080832085845260078252604080852033808752935284208054858255600182019590955560059093020180549094509192916108b4916001600160a01b039190911690836113e2565b83336001600160a01b03167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595836040516108ee9190611b70565b60405180910390a35050600180555050565b60065460005b8181101561092757610917816105d8565b61092081611c21565b9050610906565b5050565b6109336111f8565b6001600160a01b0316610944610c86565b6001600160a01b03161461096a5760405162461bcd60e51b815260040161039e90611a33565b6109746000611449565b565b61097e6111f8565b6001600160a01b031661098f610c86565b6001600160a01b0316146109b55760405162461bcd60e51b815260040161039e90611a33565b6001600160a01b0383166000908152600a6020526040902054839060ff16156109f05760405162461bcd60e51b815260040161039e90611acb565b6127108361ffff161115610a165760405162461bcd60e51b815260040161039e9061187b565b8115610a2457610a24610900565b60006009544311610a3757600954610a39565b435b600854909150610a49908761143d565b6008556001600160a01b039485166000818152600a602090815260408083208054600160ff199091168117909155815160a081018352948552918401998a5283019384526060830182815261ffff9788166080850190815260068054938401815590935292517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f600590920291820180546001600160a01b031916919099161790975596517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4087015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d41860155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d42850155505091517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d43909101805461ffff191691909216179055565b6005546001600160a01b03163314610bbf5760405162461bcd60e51b815260040161039e90611b02565b600580546001600160a01b0319166001600160a01b03831690811790915560405133907fd44190acf9d04bdb5d3a1aafff7e6dee8b40b93dfb8c5d3f0eea4b9f4539c3f790600090a350565b600181565b6003546001600160a01b03163314610c3a5760405162461bcd60e51b815260040161039e906119cb565b600380546001600160a01b0319166001600160a01b03831690811790915560405133907f618c54559e94f1499a808aad71ee8729f8e74e8c48e979616328ce493a1a52e790600090a350565b6000546001600160a01b031690565b6000610ca660016106f68486611214565b9392505050565b60076020908152600092835260408084209091529082529020805460019091015482565b60045481565b6002546001600160a01b031681565b600a6020526000908152604090205460ff1681565b6003546001600160a01b031681565b610d126111f8565b6001600160a01b0316610d23610c86565b6001600160a01b031614610d495760405162461bcd60e51b815260040161039e90611a33565b6127108261ffff161115610d6f5760405162461bcd60e51b815260040161039e906119ee565b8015610d7d57610d7d610900565b610dce83610dc860068781548110610da557634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016001015460085461121490919063ffffffff16565b9061143d565b6008819055508260068581548110610df657634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600101819055508160068581548110610e2d57634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160040160006101000a81548161ffff021916908361ffff16021790555050505050565b60026001541415610e815760405162461bcd60e51b815260040161039e90611b39565b6002600181905550600060068381548110610eac57634e487b7160e01b600052603260045260246000fd5b60009182526020808320868452600782526040808520338652909252922060059091029091019150610edd846105d8565b805415610f26576000610f12826001015461052964e8d4a51000610523876003015487600001546111fc90919063ffffffff16565b90508015610f2457610f243382611220565b505b8215610fb8578154610f43906001600160a01b0316333086611499565b600482015461ffff1615610fa9576004820154600090610f70906127109061052390879061ffff166111fc565b6005548454919250610f8f916001600160a01b039081169116836113e2565b8154610fa1908290610529908761143d565b825550610fb8565b8054610fb5908461143d565b81555b60038201548154610fd39164e8d4a5100091610523916111fc565b6001820155604051849033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15906108ee908790611b70565b6110146111f8565b6001600160a01b0316611025610c86565b6001600160a01b03161461104b5760405162461bcd60e51b815260040161039e90611a33565b6001600160a01b0381166110715760405162461bcd60e51b815260040161039e9061190a565b61081381611449565b6000806006848154811061109e57634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526007825260408085206001600160a01b03808a16875293528085206003600590950290920193840154845491516370a0823160e01b815294965091949193919216906370a08231906111019030906004016117ba565b60206040518083038186803b15801561111957600080fd5b505afa15801561112d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115191906116ba565b905083600201544311801561116557508015155b156111c557600061117a856002015443610c95565b905060006111a160085461052388600101546106f6600454876111fc90919063ffffffff16565b90506111c06111b9846105238464e8d4a510006111fc565b859061143d565b935050505b6111ed836001015461052964e8d4a510006105238688600001546111fc90919063ffffffff16565b979650505050505050565b3390565b6000610ca68284611bbf565b6000610ca68284611b9f565b6000610ca68284611bde565b6002546040516370a0823160e01b81526000916001600160a01b0316906370a08231906112519030906004016117ba565b60206040518083038186803b15801561126957600080fd5b505afa15801561127d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a191906116ba565b90506000818311156113385760025460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906112df90879086906004016117f2565b602060405180830381600087803b1580156112f957600080fd5b505af115801561130d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113319190611686565b90506113bf565b60025460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061136a90879087906004016117f2565b602060405180830381600087803b15801561138457600080fd5b505af1158015611398573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bc9190611686565b90505b806113dc5760405162461bcd60e51b815260040161039e90611996565b50505050565b6114388363a9059cbb60e01b84846040516024016114019291906117f2565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526114ba565b505050565b6000610ca68284611b87565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6113dc846323b872dd60e01b858585604051602401611401939291906117ce565b600061150f826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115499092919063ffffffff16565b805190915015611438578080602001905181019061152d9190611686565b6114385760405162461bcd60e51b815260040161039e906118c0565b60606115588484600085611560565b949350505050565b6060824710156115825760405162461bcd60e51b815260040161039e90611950565b61158b85611615565b6115a75760405162461bcd60e51b815260040161039e90611a68565b600080866001600160a01b031685876040516115c3919061179e565b60006040518083038185875af1925050503d8060008114611600576040519150601f19603f3d011682016040523d82523d6000602084013e611605565b606091505b50915091506111ed82828661161f565b803b15155b919050565b6060831561162e575081610ca6565b82511561163e5782518084602001fd5b8160405162461bcd60e51b815260040161039e9190611848565b803561ffff8116811461161a57600080fd5b60006020828403121561167b578081fd5b8135610ca681611c52565b600060208284031215611697578081fd5b8151610ca681611c67565b6000602082840312156116b3578081fd5b5035919050565b6000602082840312156116cb578081fd5b5051919050565b600080604083850312156116e4578081fd5b8235915060208301356116f681611c52565b809150509250929050565b60008060008060808587031215611716578182fd5b84359350602085013561172881611c52565b925061173660408601611658565b9150606085013561174681611c67565b939692955090935050565b60008060408385031215611763578182fd5b50508035926020909101359150565b60008060008060808587031215611787578384fd5b843593506020850135925061173660408601611658565b600082516117b0818460208701611bf5565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6001600160a01b0395909516855260208501939093526040840191909152606083015261ffff16608082015260a00190565b6000602082528251806020840152611867816040850160208701611bf5565b601f01601f19169190910160400192915050565b60208082526025908201527f6164643a20696e76616c6964206465706f7369742066656520626173697320706040820152646f696e747360d81b606082015260800190565b6020808252602a908201527f5361666542455032303a204245503230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252818101527f736166654567675472616e736665723a207472616e73666572206661696c6564604082015260600190565b6020808252600990820152686465763a207775743f60b81b604082015260600190565b60208082526025908201527f7365743a20696e76616c6964206465706f7369742066656520626173697320706040820152646f696e747360d81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252601290820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604082015260600190565b60208082526019908201527f6e6f6e4475706c6963617465643a206475706c69636174656400000000000000604082015260600190565b60208082526018908201527f736574466565416464726573733a20464f5242494444454e0000000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b90815260200190565b918252602082015260400190565b60008219821115611b9a57611b9a611c3c565b500190565b600082611bba57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611bd957611bd9611c3c565b500290565b600082821015611bf057611bf0611c3c565b500390565b60005b83811015611c10578181015183820152602001611bf8565b838111156113dc5750506000910152565b6000600019821415611c3557611c35611c3c565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461081357600080fd5b801515811461081357600080fdfea2646970667358221220790d910db16ee582d35dd254a059c529b167e724488e53e919d2366a47ae67dc64736f6c63430008000033";

export class MasterChefV2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _egg: string,
    _devaddr: string,
    _feeAddress: string,
    _eggPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MasterChefV2> {
    return super.deploy(
      _egg,
      _devaddr,
      _feeAddress,
      _eggPerBlock,
      _startBlock,
      overrides || {}
    ) as Promise<MasterChefV2>;
  }
  getDeployTransaction(
    _egg: string,
    _devaddr: string,
    _feeAddress: string,
    _eggPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _egg,
      _devaddr,
      _feeAddress,
      _eggPerBlock,
      _startBlock,
      overrides || {}
    );
  }
  attach(address: string): MasterChefV2 {
    return super.attach(address) as MasterChefV2;
  }
  connect(signer: Signer): MasterChefV2__factory {
    return super.connect(signer) as MasterChefV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefV2Interface {
    return new utils.Interface(_abi) as MasterChefV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterChefV2 {
    return new Contract(address, _abi, signerOrProvider) as MasterChefV2;
  }
}
