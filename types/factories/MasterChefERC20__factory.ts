/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MasterChefERC20,
  MasterChefERC20Interface,
} from "../MasterChefERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract QuantToken",
        name: "_egg",
        type: "address",
      },
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eggPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_depositFeeBP",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
    ],
    name: "dev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "devaddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "egg",
    outputs: [
      {
        internalType: "contract QuantToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eggPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingEgg",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accEggPerShare",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "depositFeeBP",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_depositFeeBP",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeAddress",
        type: "address",
      },
    ],
    name: "setFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eggPerBlock",
        type: "uint256",
      },
    ],
    name: "updateEmissionRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006007553480156200001657600080fd5b5060405162001b9838038062001b988339810160408190526200003991620000ee565b6200004d620000476200009a565b6200009e565b600180546001600160a01b03199081166001600160a01b0397881617909155600280548216958716959095179094556004805490941692909416919091179091556003556008556200016b565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600080600060a0868803121562000106578081fd5b8551620001138162000152565b6020870151909550620001268162000152565b6040870151909450620001398162000152565b6060870151608090970151959894975095949392505050565b6001600160a01b03811681146200016857600080fd5b50565b611a1d806200017b6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80638705fcd4116100de578063a1a4d4a411610097578063d963842211610071578063d9638422146102d2578063e2bbb158146102e5578063f2fde38b146102f8578063f456426f1461030b57610173565b8063a1a4d4a4146102ba578063c06abfc7146102c2578063d49e77cd146102ca57610173565b80638705fcd4146102505780638aa28550146102635780638d88a90e1461026b5780638da5cb5b1461027e5780638dbb1e3a1461028657806393f1a40b1461029957610173565b806348cd4cb11161013057806348cd4cb1146101ff57806351eb05a6146102075780635312ea8e1461021a578063630b5ba11461022d578063715018a61461023557806384e82a331461023d57610173565b8063081e3eda146101785780630ba84cd2146101965780631526fe27146101ab57806317caf6f1146101cf57806341275358146101d7578063441a3e70146101ec575b600080fd5b61018061031e565b60405161018d91906118e2565b60405180910390f35b6101a96101a43660046114c2565b610324565b005b6101be6101b93660046114c2565b610379565b60405161018d95949392919061162b565b6101806103c8565b6101df6103ce565b60405161018d91906115da565b6101a96101fa366004611571565b6103dd565b61018061052b565b6101a96102153660046114c2565b610531565b6101a96102283660046114c2565b61076f565b6101a961082a565b6101a9610855565b6101a961024b366004611521565b6108a0565b6101a961025e36600461148a565b610a70565b610180610abc565b6101a961027936600461148a565b610ac1565b6101df610b0d565b610180610294366004611571565b610b1c565b6102ac6102a73660046114f2565b610b34565b60405161018d9291906118eb565b610180610b58565b6101df610b5e565b6101df610b6d565b6101a96102e0366004611592565b610b7c565b6101a96102f3366004611571565b610cd0565b6101a961030636600461148a565b610e53565b6101806103193660046114f2565b610ec1565b60055490565b61032c61103f565b6001600160a01b031661033d610b0d565b6001600160a01b03161461036c5760405162461bcd60e51b8152600401610363906117c9565b60405180910390fd5b61037461082a565b600355565b6005818154811061038957600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0390931694509092909161ffff1685565b60075481565b6004546001600160a01b031681565b60006005838154811061040057634e487b7160e01b600052603260045260246000fd5b6000918252602080832086845260068252604080852033865290925292208054600590920290920192508311156104495760405162461bcd60e51b815260040161036390611835565b61045284610531565b600061048c826001015461048664e8d4a510006104808760030154876000015461104390919063ffffffff16565b9061104f565b9061105b565b9050801561049e5761049e3382611067565b83156104c85781546104b0908561105b565b825582546104c8906001600160a01b03163386611207565b600383015482546104e39164e8d4a510009161048091611043565b6001830155604051859033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689061051c9088906118e2565b60405180910390a35050505050565b60085481565b60006005828154811061055457634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201905080600201544311610575575061076c565b80546040516370a0823160e01b81526000916001600160a01b0316906370a08231906105a59030906004016115da565b60206040518083038186803b1580156105bd57600080fd5b505afa1580156105d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f591906114da565b905080158061060657506001820154155b1561061857504360029091015561076c565b6000610628836002015443610b1c565b90506000610655600754610480866001015461064f6003548761104390919063ffffffff16565b90611043565b6001546002549192506001600160a01b03908116916340c10f19911661067c84600a61104f565b6040518363ffffffff1660e01b8152600401610699929190611612565b600060405180830381600087803b1580156106b357600080fd5b505af11580156106c7573d6000803e3d6000fd5b50506001546040516340c10f1960e01b81526001600160a01b0390911692506340c10f1991506106fd9030908590600401611612565b600060405180830381600087803b15801561071757600080fd5b505af115801561072b573d6000803e3d6000fd5b5050505061075961074e8461048064e8d4a510008561104390919063ffffffff16565b60038601549061125d565b6003850155505043600290920191909155505b50565b60006005828154811061079257634e487b7160e01b600052603260045260246000fd5b6000918252602080832085845260068252604080852033808752935284208054858255600182019590955560059093020180549094509192916107e2916001600160a01b03919091169083611207565b83336001600160a01b03167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05958360405161081c91906118e2565b60405180910390a350505050565b60055460005b818110156108515761084181610531565b61084a81611993565b9050610830565b5050565b61085d61103f565b6001600160a01b031661086e610b0d565b6001600160a01b0316146108945760405162461bcd60e51b8152600401610363906117c9565b61089e6000611269565b565b6108a861103f565b6001600160a01b03166108b9610b0d565b6001600160a01b0316146108df5760405162461bcd60e51b8152600401610363906117c9565b6127108261ffff1611156109055760405162461bcd60e51b815260040161036390611690565b80156109135761091361082a565b6000600854431161092657600854610928565b435b600754909150610938908661125d565b6007556040805160a0810182526001600160a01b0395861681526020810196875290810191825260006060820181815261ffff95861660808401908152600580546001810182559381905293517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09390940292830180546001600160a01b031916949098169390931790965595517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db187015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db286015592517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db38501555090517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4909201805461ffff191692909116919091179055565b6004546001600160a01b03163314610a9a5760405162461bcd60e51b815260040161036390611861565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600181565b6002546001600160a01b03163314610aeb5760405162461bcd60e51b815260040161036390611761565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b6000610b2d600161064f848661105b565b9392505050565b60066020908152600092835260408084209091529082529020805460019091015482565b60035481565b6001546001600160a01b031681565b6002546001600160a01b031681565b610b8461103f565b6001600160a01b0316610b95610b0d565b6001600160a01b031614610bbb5760405162461bcd60e51b8152600401610363906117c9565b6127108261ffff161115610be15760405162461bcd60e51b815260040161036390611784565b8015610bef57610bef61082a565b610c4083610c3a60058781548110610c1757634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016001015460075461105b90919063ffffffff16565b9061125d565b6007819055508260058581548110610c6857634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600101819055508160058581548110610c9f57634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160040160006101000a81548161ffff021916908361ffff16021790555050505050565b600060058381548110610cf357634e487b7160e01b600052603260045260246000fd5b60009182526020808320868452600682526040808520338652909252922060059091029091019150610d2484610531565b805415610d6d576000610d59826001015461048664e8d4a510006104808760030154876000015461104390919063ffffffff16565b90508015610d6b57610d6b3382611067565b505b8215610dff578154610d8a906001600160a01b03163330866112b9565b600482015461ffff1615610df0576004820154600090610db7906127109061048090879061ffff16611043565b6004548454919250610dd6916001600160a01b03908116911683611207565b8154610de8908290610486908761125d565b825550610dff565b8054610dfc908461125d565b81555b60038201548154610e1a9164e8d4a510009161048091611043565b6001820155604051849033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159061081c9087906118e2565b610e5b61103f565b6001600160a01b0316610e6c610b0d565b6001600160a01b031614610e925760405162461bcd60e51b8152600401610363906117c9565b6001600160a01b038116610eb85760405162461bcd60e51b8152600401610363906116d5565b61076c81611269565b60008060058481548110610ee557634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526006825260408085206001600160a01b03808a16875293528085206003600590950290920193840154845491516370a0823160e01b815294965091949193919216906370a0823190610f489030906004016115da565b60206040518083038186803b158015610f6057600080fd5b505afa158015610f74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9891906114da565b9050836002015443118015610fac57508015155b1561100c576000610fc1856002015443610b1c565b90506000610fe8600754610480886001015461064f6003548761104390919063ffffffff16565b9050611007611000846104808464e8d4a51000611043565b859061125d565b935050505b611034836001015461048664e8d4a5100061048086886000015461104390919063ffffffff16565b979650505050505050565b3390565b6000610b2d8284611931565b6000610b2d8284611911565b6000610b2d8284611950565b6001546040516370a0823160e01b81526000916001600160a01b0316906370a08231906110989030906004016115da565b60206040518083038186803b1580156110b057600080fd5b505afa1580156110c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e891906114da565b90508082111561117c5760015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906111249086908590600401611612565b602060405180830381600087803b15801561113e57600080fd5b505af1158015611152573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117691906114a6565b50611202565b60015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906111ae9086908690600401611612565b602060405180830381600087803b1580156111c857600080fd5b505af11580156111dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120091906114a6565b505b505050565b6112028363a9059cbb60e01b8484604051602401611226929190611612565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526112da565b6000610b2d82846118f9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611200846323b872dd60e01b858585604051602401611226939291906115ee565b600061132f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113699092919063ffffffff16565b805190915015611202578080602001905181019061134d91906114a6565b6112025760405162461bcd60e51b815260040161036390611898565b60606113788484600085611380565b949350505050565b6060824710156113a25760405162461bcd60e51b81526004016103639061171b565b6113ab85611435565b6113c75760405162461bcd60e51b8152600401610363906117fe565b600080866001600160a01b031685876040516113e391906115be565b60006040518083038185875af1925050503d8060008114611420576040519150601f19603f3d011682016040523d82523d6000602084013e611425565b606091505b509150915061103482828661143f565b803b15155b919050565b6060831561144e575081610b2d565b82511561145e5782518084602001fd5b8160405162461bcd60e51b8152600401610363919061165d565b803561ffff8116811461143a57600080fd5b60006020828403121561149b578081fd5b8135610b2d816119c4565b6000602082840312156114b7578081fd5b8151610b2d816119d9565b6000602082840312156114d3578081fd5b5035919050565b6000602082840312156114eb578081fd5b5051919050565b60008060408385031215611504578081fd5b823591506020830135611516816119c4565b809150509250929050565b60008060008060808587031215611536578182fd5b843593506020850135611548816119c4565b925061155660408601611478565b91506060850135611566816119d9565b939692955090935050565b60008060408385031215611583578182fd5b50508035926020909101359150565b600080600080608085870312156115a7578384fd5b843593506020850135925061155660408601611478565b600082516115d0818460208701611967565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0395909516855260208501939093526040840191909152606083015261ffff16608082015260a00190565b600060208252825180602084015261167c816040850160208701611967565b601f01601f19169190910160400192915050565b60208082526025908201527f6164643a20696e76616c6964206465706f7369742066656520626173697320706040820152646f696e747360d81b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252600990820152686465763a207775743f60b81b604082015260600190565b60208082526025908201527f7365743a20696e76616c6964206465706f7369742066656520626173697320706040820152646f696e747360d81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252601290820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604082015260600190565b60208082526018908201527f736574466565416464726573733a20464f5242494444454e0000000000000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b90815260200190565b918252602082015260400190565b6000821982111561190c5761190c6119ae565b500190565b60008261192c57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561194b5761194b6119ae565b500290565b600082821015611962576119626119ae565b500390565b60005b8381101561198257818101518382015260200161196a565b838111156112005750506000910152565b60006000198214156119a7576119a76119ae565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461076c57600080fd5b801515811461076c57600080fdfea26469706673582212207eedbce5e1ec6c261953d6114630490cb0644d525fd8e879f778e2c9725bfc5864736f6c63430008000033";

export class MasterChefERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _egg: string,
    _devaddr: string,
    _feeAddress: string,
    _eggPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MasterChefERC20> {
    return super.deploy(
      _egg,
      _devaddr,
      _feeAddress,
      _eggPerBlock,
      _startBlock,
      overrides || {}
    ) as Promise<MasterChefERC20>;
  }
  getDeployTransaction(
    _egg: string,
    _devaddr: string,
    _feeAddress: string,
    _eggPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _egg,
      _devaddr,
      _feeAddress,
      _eggPerBlock,
      _startBlock,
      overrides || {}
    );
  }
  attach(address: string): MasterChefERC20 {
    return super.attach(address) as MasterChefERC20;
  }
  connect(signer: Signer): MasterChefERC20__factory {
    return super.connect(signer) as MasterChefERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefERC20Interface {
    return new utils.Interface(_abi) as MasterChefERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterChefERC20 {
    return new Contract(address, _abi, signerOrProvider) as MasterChefERC20;
  }
}
